name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Build & Release OCI Image
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        os: [alpine, debian]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Hadolint
        uses: hadolint/hadolint-action@2332a7b74a6de0dda2e2221d575162eba76ba5e5 # v3.3.0
        continue-on-error: true
        with:
          dockerfile: ./${{ matrix.os }}.dockerfile
          format: sarif
          output-file: hadolint.sarif
          no-fail: false

      - name: Upload Hadolint SARIF report
        uses: github/codeql-action/upload-sarif@3599b3baa15b485a2e49ef411a7a4bb2452e7f93 # v3.30.5
        with:
          category: hadolint-${{ matrix.os }}
          sarif_file: hadolint.sarif

      - name: Generate OCI image metadata
        id: metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern=${{ matrix.os }}-{{version}}
            type=semver,pattern=${{ matrix.os }}-{{major}}.{{minor}}
            type=semver,pattern=${{ matrix.os }}-{{major}}
            type=raw,value=${{ matrix.os }}
            type=semver,pattern={{version}},enable=${{ matrix.os == 'alpine' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ matrix.os == 'alpine' }}
            type=semver,pattern={{major}},enable=${{ matrix.os == 'alpine' }}
            type=raw,value=latest,enable=${{ matrix.os == 'alpine' }}
          labels: |
            org.opencontainers.image.description=Fluentd aggregator OCI image based on the default Fluentd OCI image.
            org.opencontainers.image.authors=Fluentd developers <fluentd@googlegroups.com>

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.4.1

      - name: Build OCI image
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: ./${{ matrix.os }}.dockerfile
          context: .
          provenance: false
          sbom: false
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          load: true
          push: false

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push OCI image
        id: build_push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: ./${{ matrix.os }}.dockerfile
          context: .
          provenance: false
          sbom: false
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          load: false
          push: true
